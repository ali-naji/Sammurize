
type EmailList @aws_iam @aws_api_key {
  id: ID!
  Email: AWSEmail!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelEmailListConnection @aws_api_key @aws_iam {
  items: [EmailList]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelEmailListFilterInput {
  id: ModelIDInput
  Email: ModelStringInput
  and: [ModelEmailListFilterInput]
  or: [ModelEmailListFilterInput]
  not: ModelEmailListFilterInput
}

type Query {
  getEmailList(id: ID!): EmailList @aws_api_key @aws_iam
  listEmailLists(filter: ModelEmailListFilterInput, limit: Int, nextToken: String): ModelEmailListConnection @aws_api_key @aws_iam
  syncEmailLists(filter: ModelEmailListFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelEmailListConnection @aws_api_key @aws_iam
}

input ModelEmailListConditionInput {
  Email: ModelStringInput
  and: [ModelEmailListConditionInput]
  or: [ModelEmailListConditionInput]
  not: ModelEmailListConditionInput
}

input CreateEmailListInput {
  id: ID
  Email: AWSEmail!
  _version: Int
}

input UpdateEmailListInput {
  id: ID!
  Email: AWSEmail
  _version: Int
}

input DeleteEmailListInput {
  id: ID!
  _version: Int
}

type Mutation {
  createEmailList(input: CreateEmailListInput!, condition: ModelEmailListConditionInput): EmailList @aws_api_key @aws_iam
  updateEmailList(input: UpdateEmailListInput!, condition: ModelEmailListConditionInput): EmailList @aws_api_key @aws_iam
  deleteEmailList(input: DeleteEmailListInput!, condition: ModelEmailListConditionInput): EmailList @aws_api_key @aws_iam
}

type Subscription {
  onCreateEmailList: EmailList @aws_subscribe(mutations: ["createEmailList"]) @aws_api_key @aws_iam
  onUpdateEmailList: EmailList @aws_subscribe(mutations: ["updateEmailList"]) @aws_api_key @aws_iam
  onDeleteEmailList: EmailList @aws_subscribe(mutations: ["deleteEmailList"]) @aws_api_key @aws_iam
}

